[sampler]
name = emcee_pt
ntemps = 2
nwalkers = 30
checkpoint-interval = 50
niterations = 100

[model]
name = gaussian_noise
h1-low-frequency-cutoff = 20.
l1-low-frequency-cutoff = 20.

[variable_params]
distance = 
tc = 
ra = 
dec = 
polarization = 
inclination = 
mass1 = 
mass2 = 
spin1_a = 
spin1_azimuthal = 
spin1_polar = 
spin2_a = 
spin2_azimuthal = 
spin2_polar = 

[static_params]
approximant = IMRPhenomPv2
f_lower = 18
f_ref = 20

[prior-distance]
name = uniform_radius
min-distance = 10
max-distance = 1000

[prior-tc]
name = uniform
min-tc = 1126259461.8
max-tc = 1126259462.2

[prior-polarization+inclination]
name = uniform_solidangle
polar-angle = inclination
azimuthal-angle = polarization

[prior-ra+dec]
name = uniform_sky

[prior-mass1]
name = uniform
min-mass1 = 10
max-mass1 = 80

[prior-mass2]
name = uniform
min-mass2 = 10
max-mass2 = 80

[prior-spin1_a]
name = uniform
min-spin1_a = 0.0
max-spin1_a = 0.99

[prior-spin1_polar+spin1_azimuthal]
name = uniform_solidangle
polar-angle = spin1_polar
azimuthal-angle = spin1_azimuthal

[prior-spin2_a]
name = uniform
min-spin2_a = 0.0
max-spin2_a = 0.99

[prior-spin2_polar+spin2_azimuthal]
name = uniform_solidangle
polar-angle = spin2_polar
azimuthal-angle = spin2_azimuthal

[constraint-1]
name = custom
constraint_arg = chirp_distance(distance, mchirp_from_mass1_mass2(mass1, mass2))/sqrt( (1+cos(inclination)**2)**2/4 * 0.5 + cos(inclination)**2 * 0.5) < 50

[sampling_params]
mass1, mass2 = mchirp, q

[sampling_transforms-mchirp+q]
name = mass1_mass2_to_mchirp_q

[waveform_transforms-spin1x+spin1y+spin1z]
name = spherical_spin_1_to_cartesian_spin_1

[waveform_transforms-spin2x+spin2y+spin2z]
name = spherical_spin_2_to_cartesian_spin_2

